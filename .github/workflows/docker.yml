name: Docker Build
on: [push]

jobs:
  docker-build:
    runs-on: ubuntu-latest
    container:
      image: hairyhenderson/gomplate-ci-build:latest
    env:
      DOCKER_BUILDKIT: 1
      DOCKER_CLI_EXPERIMENTAL: enabled
    steps:
    - name: enable experimental mode
      run: |
        mkdir ~/.docker
        echo '{"experimental": "enabled"}' > ~/.docker/config.json
    - name: Install BuildX
      run: |
        mkdir -p ~/.docker/cli-plugins
        curl -SL -o ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64
        chmod 755 ~/.docker/cli-plugins/docker-buildx
    - name: Create BuildX Builder
      run: |
        docker buildx create --platform linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7,linux/ppc64le,linux/s390x,linux/386 --use
        docker buildx ls
    - run: docker info && docker version
    - uses: actions/checkout@v1
    - name: determine if this is a tag
      run: |
        if (git describe --abbrev=0 --exact-match &>/dev/null); then
          echo "::set-env name=is_tag::true"
          echo "::set-env name=git_tag::$(git describe --abbrev=0 --exact-match)"
          # splits the major version from $tag - assumes it's a 3-part semver
          echo "::set-env name=major_version::${tag%%\.*}"
        fi
      if: github.repository == 'hairyhenderson/gomplate'
    - name: login
      run: |
        # NOTE: DOCKERHUB_TOKEN and DOCKERHUB_USERNAME must be present in https://github.com/hairyhenderson/gomplate/settings
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      if: github.repository == 'hairyhenderson/gomplate'
    # - name: Make/Push temporary Docker images
    #   run: make docker-multi COMMIT=${{ github.sha }}
    #   env:
    #     COMMIT: ${{ github.sha }}
    #   if: github.repository == 'hairyhenderson/gomplate'
    # - name: Pull the temporary images
    #   run: |
    #     docker pull hairyhenderson/gomplate:latest-${{ github.sha }}
    #     docker pull hairyhenderson/gomplate:slim-${{ github.sha }}
    #     docker pull hairyhenderson/gomplate:alpine-${{ github.sha }}
    # # - name: Delete temp images from registry
    # #   run: |
    # #     reg rm hairyhenderson/gomplate:latest-${{ github.sha }}
    # #     reg rm hairyhenderson/gomplate:slim-${{ github.sha }}
    # #     reg rm hairyhenderson/gomplate:alpine-${{ github.sha }}
    # - name: Re-tag and push (master)
    #   run: |
    #     docker tag hairyhenderson/gomplate:latest-${{ github.sha }} hairyhenderson/gomplate:latest
    #     docker tag hairyhenderson/gomplate:slim-${{ github.sha }} hairyhenderson/gomplate:slim
    #     docker tag hairyhenderson/gomplate:alpine-${{ github.sha }} hairyhenderson/gomplate:alpine

    #     docker rmi hairyhenderson/gomplate:latest-${{ github.sha }}
    #     docker rmi hairyhenderson/gomplate:slim-${{ github.sha }}
    #     docker rmi hairyhenderson/gomplate:alpine-${{ github.sha }}

    #     docker images
    #     # docker push hairyhenderson/gomplate
    #   if: github.repository == 'hairyhenderson/gomplate' && github.ref == 'refs/heads/master'
    # - name: Re-tag and push (tagged release)
    #   run: |
    #     docker tag hairyhenderson/gomplate:latest-${{ github.sha }} hairyhenderson/gomplate:latest
    #     docker tag hairyhenderson/gomplate:slim-${{ github.sha }} hairyhenderson/gomplate:slim
    #     docker tag hairyhenderson/gomplate:alpine-${{ github.sha }} hairyhenderson/gomplate:alpine

    #     docker tag hairyhenderson/gomplate:latest-${{ github.sha }} hairyhenderson/gomplate:${git_tag}
    #     docker tag hairyhenderson/gomplate:latest-${{ github.sha }} hairyhenderson/gomplate:stable
    #     docker tag hairyhenderson/gomplate:latest-${{ github.sha }} hairyhenderson/gomplate:${major_version}
    #     docker tag hairyhenderson/gomplate:slim-${{ github.sha }} hairyhenderson/gomplate:${git_tag}-slim
    #     docker tag hairyhenderson/gomplate:slim-${{ github.sha }} hairyhenderson/gomplate:${major_version}-slim
    #     docker tag hairyhenderson/gomplate:slim-${{ github.sha }} hairyhenderson/gomplate:stable-slim
    #     docker tag hairyhenderson/gomplate:alpine-${{ github.sha }} hairyhenderson/gomplate:${git_tag}-alpine
    #     docker tag hairyhenderson/gomplate:alpine-${{ github.sha }} hairyhenderson/gomplate:${major_version}-alpine
    #     docker tag hairyhenderson/gomplate:alpine-${{ github.sha }} hairyhenderson/gomplate:stable-alpine

    #     docker rmi hairyhenderson/gomplate:latest-${{ github.sha }}
    #     docker rmi hairyhenderson/gomplate:slim-${{ github.sha }}
    #     docker rmi hairyhenderson/gomplate:alpine-${{ github.sha }}

    #     docker images
    #     # docker push hairyhenderson/gomplate
    #   if: github.repository == 'hairyhenderson/gomplate' && contains(github.ref, 'v*')
    # - name: Re-tag and push (non-master dry run)
    #   run: |
    #     docker tag hairyhenderson/gomplate:latest-${{ github.sha }} hairyhenderson/gomplate:latest
    #     docker tag hairyhenderson/gomplate:slim-${{ github.sha }} hairyhenderson/gomplate:slim
    #     docker tag hairyhenderson/gomplate:alpine-${{ github.sha }} hairyhenderson/gomplate:alpine

    #     docker rmi hairyhenderson/gomplate:latest-${{ github.sha }}
    #     docker rmi hairyhenderson/gomplate:slim-${{ github.sha }}
    #     docker rmi hairyhenderson/gomplate:alpine-${{ github.sha }}

    #     docker images
    #     # docker push hairyhenderson/gomplate
    #   if: github.repository != 'hairyhenderson/gomplate' || github.ref != 'refs/heads/master'
  bashbrew-build:
    runs-on: ubuntu-latest
    container:
      image: hairyhenderson/gomplate-ci-build:latest
    env:
      BASHBREW_LIBRARY: packaging/library/
      BASHBREW_NAMESPACE: hairyhenderson
    steps:
    - run: docker info && docker version
    - uses: actions/checkout@v1
    - name: determine if this is a tag
      run: |
        if (git describe --abbrev=0 --exact-match &>/dev/null); then
          echo "::set-env name=is_tag::true"
          echo "::set-env name=git_tag::$(git describe --abbrev=0 --exact-match)"
          # splits the major version from $tag - assumes it's a 3-part semver
          echo "::set-env name=major_version::${tag%%\.*}"
        fi
      if: github.repository == 'hairyhenderson/gomplate'
    - name: login
      run: |
        # NOTE: DOCKERHUB_TOKEN and DOCKERHUB_USERNAME must be present in https://github.com/hairyhenderson/gomplate/settings
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      if: github.repository == 'hairyhenderson/gomplate'
    - name: build
      run: |
        bashbrew build gomplate
